mapping:
  'Identifier > punctuator "."':
    name: 'MemberExpression'
  'Identifier > indention ">=" > punctuator "."':
    name: 'MemberExpression'
  'Identifier > punctuator "["':
    name: 'MemberExpression'
  'FunctionExpression > punctuator "."':
    name: 'MemberExpression'
  'ThisExpression > punctuator "."':
    name: 'MemberExpression'
  'ArrayExpression > punctuator "."':
    name: 'MemberExpression'
  'ObjectExpression > punctuator "."':
    name: 'MemberExpression'
  'Literal > punctuator "."':
    name: 'MemberExpression'
  'TemplateLiteral > punctuator "."':
    name: 'MemberExpression'
  'Identifier > punctuator "("':
    name: 'CallExpression'
    allowNested: true
    scopes:
      'Property': 'FunctionExpression'
      'NewExpression': '$origin'
  'Identifier > punctuator ":"':
    scopes:
      'VariableDeclarator': 'ObjectExpression'
      'Property': 'ObjectExpression'
  'Literal > punctuator ":"':
    name: 'ObjectExpression'
    scopes:
      'ConditionalExpression': '$origin'
  'MemberExpression > punctuator "("':
    name: 'CallExpression'
    allowNested: true
    scopes:
      'NewExpression': '$origin'
  'CallExpression > punctuator "."':
    name: 'MemberExpression'
  'CallExpression > indention ">=" > punctuator "."':
    name: 'MemberExpression'
  'Super > punctuator "("':
    name: 'CallExpression'
  'operator [=,*=,**=,/=,%=,+=,-=,
  <<=,>>=,>>>=,&=,^=,|=]':
    name: 'AssignmentExpression'
    scopes:
      'FunctionDeclaration': 'AssignmentPattern'
      'FunctionExpression': 'AssignmentPattern'
  'operator [instanceof,in,+,-,*,/,%,**,|,^,&,==,!=,===,!==,<,>,>=,<=,<<,>>,>>>]':
    name: 'BinaryExpression'
  'operator [++,--]':
    name: 'UpdateExpression'
  'operator [||,&&]':
    name: 'LogicalExpression'
    allowNested: true
  'punctuator "?"':
    name: 'ConditionalExpression'
  'FirescriptGrouping > operator "=>"':
    name: 'ArrowFunctionExpression'
